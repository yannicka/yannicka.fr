h2#reflexions Réflexions

p Aucune réflexion.

ul
	// li 1. Peut-être serait-il nécessaire d'écrire explicitement le type qu'une fonction retourne ?
	// je pense que non en fait
	// li 1. Typer les variables explicitement (comme les fonctions du point 1) ?
	// Typage dynamique préféré
	// li 1. Rendre l'écriture du <code>@</code> facultative ?
	// Le @ est cool
	// li 1. Ajouter le mot-clé as pour faire du transtypage. <code>(ma_peugeot as Voiture).une_methode()</code> ?
	// Bien sûr
	// li 2. Prévoir du inline pour faire des constantes ou méthodes inlines ? Via des metadata ?
	// Inutile
	// li 4. Des retour multiples ? <code>ma_fonction() { 2, 3, 4 } ; a, b, c = ma_fonction()</code>
	// OK
	// li 5. Appel de fonctions avec des arguments nommés ? <code>ma_fonction(Num a, Num b, Num c) { } ; ma_fonction(c: 5, b: 6, a: 7)</code>
	// Pas pour l'instant en tout cas
	// li 3. Réflechir au fonctionnement du code multi-fichiers
	// Fait avec Guillaume
	// li 8. Autoriser le <code>this.</code>
	// Inutile et redondant
	// li 5. Typage fixe ou dynamique ?
	// Fixe avec "Var" pour le dynamisme
	// li 5. Réfléchir au fonctionnement des références.
	// Fait avec Guillaume et Aymeric (ref et noref)
	// li 7. Des types <code>Int</code> et <code>Float</code> pour remplacer <code>Num</code> et <code>Chr</code> pour compléter <code>Str</code>
	// Type Char créé
	// li 2. Fonctionnement des variables variables
	// A réfléchir plus tard
	// li 3. Type <code>Func</code> avec précision des types de paramètres et de retour ?
	// Bien sûr
