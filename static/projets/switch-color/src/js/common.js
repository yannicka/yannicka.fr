// Generated by CoffeeScript 1.7.1
var Finger, Rand, load_file, parse_csv,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

load_file = function(file, callback) {
  var xhr;
  xhr = new XMLHttpRequest();
  xhr.open('get', file, true);
  xhr.overrideMimeType('text/csv');
  xhr.send(null);
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4 && (xhr.status === 200 || xhr.status === 0)) {
      callback(xhr.responseText);
    }
  };
};

Rand = {
  seed: 5,
  gen: function(min, max) {
    var rnd;
    min = min || 0;
    max = max || 1;
    this.seed = (this.seed * 9301 + 49297) % 233280;
    rnd = this.seed / 233280;
    return min + rnd * (max - min);
  }
};

parse_csv = function(txt, sep) {
  var line, lines, tab, _i, _len;
  if (sep == null) {
    sep = ',';
  }
  lines = txt.split(/\r\n|\n|\r/);
  tab = [];
  for (_i = 0, _len = lines.length; _i < _len; _i++) {
    line = lines[_i];
    tab.push(line.split(sep));
  }
  return tab;
};

Finger = (function() {
  function Finger() {
    this.on_finger_move = __bind(this.on_finger_move, this);
    this.on_finger_up = __bind(this.on_finger_up, this);
    this.on_finger_down = __bind(this.on_finger_down, this);
    this.target = null;
    this.valid = true;
    this.events = [];
    document.addEventListener('mousedown', this.on_finger_down, false);
    document.addEventListener('mouseup', this.on_finger_up, false);
    document.addEventListener('mousemove', this.on_finger_move, false);
  }

  Finger.prototype.on_finger_down = function(e) {
    this.on_finger_move(e);
    this.valid = true;
    this.target = e.target;
  };

  Finger.prototype.on_finger_up = function(e) {
    this.target = e.target;
    if (this.valid && this.events.tap) {
      this.events.tap(this);
    }
  };

  Finger.prototype.on_finger_move = function(e) {
    this.target = e.target;
    this.valid = false;
  };

  Finger.prototype.add_event = function(name, event) {
    this.events[name] = event;
  };

  return Finger;

})();
